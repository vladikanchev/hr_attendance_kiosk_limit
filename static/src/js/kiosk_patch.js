odoo.define('your_module.kiosk_patch', function (require) {
    "use strict";

    const KioskMode = require('hr_attendance.kiosk_mode');

    console.log("‚úÖ kiosk_patch.js –∑–∞—Ä–µ–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!");

    KioskMode.include({
        _onBarcodeScanned: async function (barcode) {
            console.log("üü° –°–ª—É–∂–∏—Ç–µ–ª —Å–∫–∞–Ω–∏—Ä–∞–Ω!");

            const now = new Date();
            const hour = now.getHours();
            const minute = now.getMinutes();
            const totalMinutes = hour * 60 + minute;
            const limit = 15 * 60;

            await this._super.apply(this, arguments);

            const lastAction = this.lastAttendance ? this.lastAttendance.action : null;

            if (lastAction === "check_in" && totalMinutes < limit) {
                this._showError("–ú–æ–∂–µ –¥–∞ –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ Check Out —Å–∞–º–æ —Å–ª–µ–¥ 15:00!");
                this._speak("–ú–æ–∂–µ –¥–∞ –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ Check Out —Å–∞–º–æ —Å–ª–µ–¥ –ø–µ—Ç–Ω–∞–¥–µ—Å–µ—Ç —á–∞—Å–∞.");
            } else if (lastAction === "check_out" && totalMinutes >= limit) {
                this._showError("–ú–æ–∂–µ –¥–∞ –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ Check In —Å–∞–º–æ –ø—Ä–µ–¥–∏ 15:00!");
                this._speak("–ú–æ–∂–µ –¥–∞ –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ Check In —Å–∞–º–æ –ø—Ä–µ–¥–∏ –ø–µ—Ç–Ω–∞–¥–µ—Å–µ—Ç —á–∞—Å–∞.");
            }
        },

        _showError: function (message) {
            this.$('.o_hr_attendance_message')
                .text(message)
                .removeClass('text-success')
                .addClass('text-danger');
        },

        _speak: function (message) {
            if ('speechSynthesis' in window) {
                const utterance = new SpeechSynthesisUtterance(message);
                utterance.lang = 'bg-BG';
                speechSynthesis.speak(utterance);
            }
        },
    });
});
